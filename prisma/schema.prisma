generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "mongodb"
	url      = env("DATABASE_URL")
}

model User {
	id String @id @default(auto()) @map("_id") @db.ObjectId
	firstName String
	lastName String
	email String @unique
	hashedPassword String
	image String
	likeCount Int?
	tag String?
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	posts Post[]
	comments Comment[]
	likes LikedFeeds[]
}

model Comment {
	id String @id @default(auto()) @map("_id") @db.ObjectId
	body String
	userName String
	userTag String
	userImage String
	commentCount Int?
	likeCount Int?
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	userId String @db.ObjectId
	user User @relation(fields: [userId], references: [id], onDelete: Cascade)

	postId String @db.ObjectId
	post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model LikedFeeds {
	id String @id @default(auto()) @map("_id") @db.ObjectId
	postId String @db.ObjectId

	userId String @db.ObjectId
	user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Post {
	id String @id @default(auto()) @map("_id") @db.ObjectId
	userName String
	userTag String
	userImage String
	body String
	commentCount Int?
	likeCount Int?
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	userId String @db.ObjectId
	user User @relation(fields: [userId], references: [id], onDelete: Cascade)

	comments Comment[]
}
